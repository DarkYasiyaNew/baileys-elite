name: Automatically Publish Scoped NPM Package

on:
  push:
    branches: [main]
    paths: ['package.json']

permissions: write-all

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Get previous and current versions
        id: versions
        run: |
          git checkout HEAD~1 package.json || true
          echo "PREV_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          git checkout HEAD package.json
          echo "CUR_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Check version bump
        id: check_version
        run: |
          if [ "$PREV_VERSION" != "$CUR_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to NPM (Scoped)
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          npm publish --access public${{ contains(env.CUR_VERSION, '-beta') && ' --tag beta' || '' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git Tag
        if: steps.check_version.outputs.version_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag v$CUR_VERSION
          git push origin v$CUR_VERSION
